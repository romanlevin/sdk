// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: didcomm.proto

package messaging

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CoreMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type    string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Body    []byte   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	To      []string `protobuf:"bytes,4,rep,name=to,proto3" json:"to,omitempty"`
	From    string   `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`
	Created int64    `protobuf:"varint,6,opt,name=created,json=created_time,proto3" json:"created,omitempty"`
	Expires int64    `protobuf:"varint,7,opt,name=expires,json=expires_time,proto3" json:"expires,omitempty"`
}

func (x *CoreMessage) Reset() {
	*x = CoreMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_didcomm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreMessage) ProtoMessage() {}

func (x *CoreMessage) ProtoReflect() protoreflect.Message {
	mi := &file_didcomm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreMessage.ProtoReflect.Descriptor instead.
func (*CoreMessage) Descriptor() ([]byte, []int) {
	return file_didcomm_proto_rawDescGZIP(), []int{0}
}

func (x *CoreMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CoreMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CoreMessage) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *CoreMessage) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *CoreMessage) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *CoreMessage) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *CoreMessage) GetExpires() int64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

type NoOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoOp) Reset() {
	*x = NoOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_didcomm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoOp) ProtoMessage() {}

func (x *NoOp) ProtoReflect() protoreflect.Message {
	mi := &file_didcomm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoOp.ProtoReflect.Descriptor instead.
func (*NoOp) Descriptor() ([]byte, []int) {
	return file_didcomm_proto_rawDescGZIP(), []int{1}
}

var File_didcomm_proto protoreflect.FileDescriptor

var file_didcomm_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x1a, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa7, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1d,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x06, 0x0a, 0x04,
	0x4e, 0x6f, 0x4f, 0x70, 0x32, 0xdf, 0x02, 0x0a, 0x0c, 0x44, 0x49, 0x44, 0x43, 0x6f, 0x6d, 0x6d,
	0x50, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x47, 0x0a, 0x05, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x1e,
	0x2e, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1e,
	0x2e, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x53,
	0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x12, 0x1e, 0x2e, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x1e, 0x2e, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x30, 0x01, 0x12, 0x53, 0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1e, 0x2e, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x28, 0x01, 0x12, 0x5c, 0x0a, 0x16, 0x42, 0x69, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x1e, 0x2e, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x28, 0x01, 0x30, 0x01, 0x32, 0x8b, 0x03, 0x0a, 0x10, 0x44, 0x49, 0x44, 0x43, 0x6f,
	0x6d, 0x6d, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x05, 0x55,
	0x6e, 0x61, 0x72, 0x79, 0x12, 0x23, 0x2e, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x23, 0x2e, 0x64, 0x69, 0x64, 0x63,
	0x6f, 0x6d, 0x6d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5d,
	0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x12, 0x23, 0x2e, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x23, 0x2e, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x30, 0x01, 0x12, 0x5d, 0x0a,
	0x0f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x12, 0x23, 0x2e, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x23, 0x2e, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x28, 0x01, 0x12, 0x66, 0x0a, 0x16,
	0x42, 0x69, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x2e, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x23, 0x2e, 0x64, 0x69,
	0x64, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x28, 0x01, 0x30, 0x01, 0x32, 0x59, 0x0a, 0x0e, 0x44, 0x49, 0x44, 0x43, 0x6f, 0x6d, 0x6d, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x12, 0x47, 0x0a, 0x07, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x78, 0x12, 0x23, 0x2e, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x17, 0x2e, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x4f, 0x70, 0x42,
	0x2b, 0x5a, 0x15, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0xaa, 0x02, 0x11, 0x44, 0x49, 0x44, 0x43, 0x6f,
	0x6d, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_didcomm_proto_rawDescOnce sync.Once
	file_didcomm_proto_rawDescData = file_didcomm_proto_rawDesc
)

func file_didcomm_proto_rawDescGZIP() []byte {
	file_didcomm_proto_rawDescOnce.Do(func() {
		file_didcomm_proto_rawDescData = protoimpl.X.CompressGZIP(file_didcomm_proto_rawDescData)
	})
	return file_didcomm_proto_rawDescData
}

var file_didcomm_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_didcomm_proto_goTypes = []interface{}{
	(*CoreMessage)(nil),      // 0: didcomm.messaging.CoreMessage
	(*NoOp)(nil),             // 1: didcomm.messaging.NoOp
	(*EncryptedMessage)(nil), // 2: didcomm.messaging.EncryptedMessage
}
var file_didcomm_proto_depIdxs = []int32{
	0, // 0: didcomm.messaging.DIDCommPlain.Unary:input_type -> didcomm.messaging.CoreMessage
	0, // 1: didcomm.messaging.DIDCommPlain.ServerStreaming:input_type -> didcomm.messaging.CoreMessage
	0, // 2: didcomm.messaging.DIDCommPlain.ClientStreaming:input_type -> didcomm.messaging.CoreMessage
	0, // 3: didcomm.messaging.DIDCommPlain.BidirectionalStreaming:input_type -> didcomm.messaging.CoreMessage
	2, // 4: didcomm.messaging.DIDCommEncrypted.Unary:input_type -> didcomm.messaging.EncryptedMessage
	2, // 5: didcomm.messaging.DIDCommEncrypted.ServerStreaming:input_type -> didcomm.messaging.EncryptedMessage
	2, // 6: didcomm.messaging.DIDCommEncrypted.ClientStreaming:input_type -> didcomm.messaging.EncryptedMessage
	2, // 7: didcomm.messaging.DIDCommEncrypted.BidirectionalStreaming:input_type -> didcomm.messaging.EncryptedMessage
	2, // 8: didcomm.messaging.DIDCommSimplex.Simplex:input_type -> didcomm.messaging.EncryptedMessage
	0, // 9: didcomm.messaging.DIDCommPlain.Unary:output_type -> didcomm.messaging.CoreMessage
	0, // 10: didcomm.messaging.DIDCommPlain.ServerStreaming:output_type -> didcomm.messaging.CoreMessage
	0, // 11: didcomm.messaging.DIDCommPlain.ClientStreaming:output_type -> didcomm.messaging.CoreMessage
	0, // 12: didcomm.messaging.DIDCommPlain.BidirectionalStreaming:output_type -> didcomm.messaging.CoreMessage
	2, // 13: didcomm.messaging.DIDCommEncrypted.Unary:output_type -> didcomm.messaging.EncryptedMessage
	2, // 14: didcomm.messaging.DIDCommEncrypted.ServerStreaming:output_type -> didcomm.messaging.EncryptedMessage
	2, // 15: didcomm.messaging.DIDCommEncrypted.ClientStreaming:output_type -> didcomm.messaging.EncryptedMessage
	2, // 16: didcomm.messaging.DIDCommEncrypted.BidirectionalStreaming:output_type -> didcomm.messaging.EncryptedMessage
	1, // 17: didcomm.messaging.DIDCommSimplex.Simplex:output_type -> didcomm.messaging.NoOp
	9, // [9:18] is the sub-list for method output_type
	0, // [0:9] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_didcomm_proto_init() }
func file_didcomm_proto_init() {
	if File_didcomm_proto != nil {
		return
	}
	file_security_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_didcomm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoreMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_didcomm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_didcomm_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_didcomm_proto_goTypes,
		DependencyIndexes: file_didcomm_proto_depIdxs,
		MessageInfos:      file_didcomm_proto_msgTypes,
	}.Build()
	File_didcomm_proto = out.File
	file_didcomm_proto_rawDesc = nil
	file_didcomm_proto_goTypes = nil
	file_didcomm_proto_depIdxs = nil
}
