// source: models/Presentations.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var models_Attributes_pb = require('../models/Attributes_pb.js');
goog.object.extend(proto, models_Attributes_pb);
goog.exportSymbol('proto.trinsic.services.GeneratePresentationRequest', null, global);
goog.exportSymbol('proto.trinsic.services.GeneratePresentationResponse', null, global);
goog.exportSymbol('proto.trinsic.services.SubmitPresentationRequest', null, global);
goog.exportSymbol('proto.trinsic.services.SubmitPresentationResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trinsic.services.GeneratePresentationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trinsic.services.GeneratePresentationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trinsic.services.GeneratePresentationRequest.displayName = 'proto.trinsic.services.GeneratePresentationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trinsic.services.GeneratePresentationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trinsic.services.GeneratePresentationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trinsic.services.GeneratePresentationResponse.displayName = 'proto.trinsic.services.GeneratePresentationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trinsic.services.SubmitPresentationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trinsic.services.SubmitPresentationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trinsic.services.SubmitPresentationRequest.displayName = 'proto.trinsic.services.SubmitPresentationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trinsic.services.SubmitPresentationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.trinsic.services.SubmitPresentationResponse.repeatedFields_, null);
};
goog.inherits(proto.trinsic.services.SubmitPresentationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trinsic.services.SubmitPresentationResponse.displayName = 'proto.trinsic.services.SubmitPresentationResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trinsic.services.GeneratePresentationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.trinsic.services.GeneratePresentationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trinsic.services.GeneratePresentationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trinsic.services.GeneratePresentationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    presentationtemplateid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trinsic.services.GeneratePresentationRequest}
 */
proto.trinsic.services.GeneratePresentationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trinsic.services.GeneratePresentationRequest;
  return proto.trinsic.services.GeneratePresentationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trinsic.services.GeneratePresentationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trinsic.services.GeneratePresentationRequest}
 */
proto.trinsic.services.GeneratePresentationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPresentationtemplateid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trinsic.services.GeneratePresentationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trinsic.services.GeneratePresentationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trinsic.services.GeneratePresentationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trinsic.services.GeneratePresentationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPresentationtemplateid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string credentialId = 1;
 * @return {string}
 */
proto.trinsic.services.GeneratePresentationRequest.prototype.getCredentialid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.trinsic.services.GeneratePresentationRequest} returns this
 */
proto.trinsic.services.GeneratePresentationRequest.prototype.setCredentialid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string presentationTemplateId = 2;
 * @return {string}
 */
proto.trinsic.services.GeneratePresentationRequest.prototype.getPresentationtemplateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.trinsic.services.GeneratePresentationRequest} returns this
 */
proto.trinsic.services.GeneratePresentationRequest.prototype.setPresentationtemplateid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trinsic.services.GeneratePresentationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.trinsic.services.GeneratePresentationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trinsic.services.GeneratePresentationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trinsic.services.GeneratePresentationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trinsic.services.GeneratePresentationResponse}
 */
proto.trinsic.services.GeneratePresentationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trinsic.services.GeneratePresentationResponse;
  return proto.trinsic.services.GeneratePresentationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trinsic.services.GeneratePresentationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trinsic.services.GeneratePresentationResponse}
 */
proto.trinsic.services.GeneratePresentationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trinsic.services.GeneratePresentationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trinsic.services.GeneratePresentationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trinsic.services.GeneratePresentationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trinsic.services.GeneratePresentationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string data = 1;
 * @return {string}
 */
proto.trinsic.services.GeneratePresentationResponse.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.trinsic.services.GeneratePresentationResponse} returns this
 */
proto.trinsic.services.GeneratePresentationResponse.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trinsic.services.SubmitPresentationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.trinsic.services.SubmitPresentationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trinsic.services.SubmitPresentationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trinsic.services.SubmitPresentationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trinsic.services.SubmitPresentationRequest}
 */
proto.trinsic.services.SubmitPresentationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trinsic.services.SubmitPresentationRequest;
  return proto.trinsic.services.SubmitPresentationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trinsic.services.SubmitPresentationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trinsic.services.SubmitPresentationRequest}
 */
proto.trinsic.services.SubmitPresentationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trinsic.services.SubmitPresentationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trinsic.services.SubmitPresentationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trinsic.services.SubmitPresentationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trinsic.services.SubmitPresentationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string data = 1;
 * @return {string}
 */
proto.trinsic.services.SubmitPresentationRequest.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.trinsic.services.SubmitPresentationRequest} returns this
 */
proto.trinsic.services.SubmitPresentationRequest.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.trinsic.services.SubmitPresentationResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trinsic.services.SubmitPresentationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.trinsic.services.SubmitPresentationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trinsic.services.SubmitPresentationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trinsic.services.SubmitPresentationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    presentationtemplateid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    holderid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    verifiedattributesList: jspb.Message.toObjectList(msg.getVerifiedattributesList(),
    models_Attributes_pb.Attribute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trinsic.services.SubmitPresentationResponse}
 */
proto.trinsic.services.SubmitPresentationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trinsic.services.SubmitPresentationResponse;
  return proto.trinsic.services.SubmitPresentationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trinsic.services.SubmitPresentationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trinsic.services.SubmitPresentationResponse}
 */
proto.trinsic.services.SubmitPresentationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPresentationtemplateid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderid(value);
      break;
    case 3:
      var value = new models_Attributes_pb.Attribute;
      reader.readMessage(value,models_Attributes_pb.Attribute.deserializeBinaryFromReader);
      msg.addVerifiedattributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trinsic.services.SubmitPresentationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trinsic.services.SubmitPresentationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trinsic.services.SubmitPresentationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trinsic.services.SubmitPresentationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPresentationtemplateid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHolderid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVerifiedattributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      models_Attributes_pb.Attribute.serializeBinaryToWriter
    );
  }
};


/**
 * optional string presentationTemplateId = 1;
 * @return {string}
 */
proto.trinsic.services.SubmitPresentationResponse.prototype.getPresentationtemplateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.trinsic.services.SubmitPresentationResponse} returns this
 */
proto.trinsic.services.SubmitPresentationResponse.prototype.setPresentationtemplateid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string holderId = 2;
 * @return {string}
 */
proto.trinsic.services.SubmitPresentationResponse.prototype.getHolderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.trinsic.services.SubmitPresentationResponse} returns this
 */
proto.trinsic.services.SubmitPresentationResponse.prototype.setHolderid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Attribute verifiedAttributes = 3;
 * @return {!Array<!proto.trinsic.services.Attribute>}
 */
proto.trinsic.services.SubmitPresentationResponse.prototype.getVerifiedattributesList = function() {
  return /** @type{!Array<!proto.trinsic.services.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, models_Attributes_pb.Attribute, 3));
};


/**
 * @param {!Array<!proto.trinsic.services.Attribute>} value
 * @return {!proto.trinsic.services.SubmitPresentationResponse} returns this
*/
proto.trinsic.services.SubmitPresentationResponse.prototype.setVerifiedattributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.trinsic.services.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.trinsic.services.Attribute}
 */
proto.trinsic.services.SubmitPresentationResponse.prototype.addVerifiedattributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.trinsic.services.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.trinsic.services.SubmitPresentationResponse} returns this
 */
proto.trinsic.services.SubmitPresentationResponse.prototype.clearVerifiedattributesList = function() {
  return this.setVerifiedattributesList([]);
};


goog.object.extend(exports, proto.trinsic.services);
