// source: models/Credentials.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var models_Attributes_pb = require('../models/Attributes_pb.js');
goog.object.extend(proto, models_Attributes_pb);
goog.exportSymbol('proto.trinsic.services.IssueCredentialRequest', null, global);
goog.exportSymbol('proto.trinsic.services.IssueCredentialResponse', null, global);
goog.exportSymbol('proto.trinsic.services.ListCredentialRequest', null, global);
goog.exportSymbol('proto.trinsic.services.ListCredentialResponse', null, global);
goog.exportSymbol('proto.trinsic.services.aCredential', null, global);
goog.exportSymbol('proto.trinsic.services.aCredential.State', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trinsic.services.aCredential = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.trinsic.services.aCredential.repeatedFields_, null);
};
goog.inherits(proto.trinsic.services.aCredential, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trinsic.services.aCredential.displayName = 'proto.trinsic.services.aCredential';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trinsic.services.IssueCredentialRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.trinsic.services.IssueCredentialRequest.repeatedFields_, null);
};
goog.inherits(proto.trinsic.services.IssueCredentialRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trinsic.services.IssueCredentialRequest.displayName = 'proto.trinsic.services.IssueCredentialRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trinsic.services.IssueCredentialResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trinsic.services.IssueCredentialResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trinsic.services.IssueCredentialResponse.displayName = 'proto.trinsic.services.IssueCredentialResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trinsic.services.ListCredentialRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trinsic.services.ListCredentialRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trinsic.services.ListCredentialRequest.displayName = 'proto.trinsic.services.ListCredentialRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trinsic.services.ListCredentialResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.trinsic.services.ListCredentialResponse.repeatedFields_, null);
};
goog.inherits(proto.trinsic.services.ListCredentialResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trinsic.services.ListCredentialResponse.displayName = 'proto.trinsic.services.ListCredentialResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.trinsic.services.aCredential.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trinsic.services.aCredential.prototype.toObject = function(opt_includeInstance) {
  return proto.trinsic.services.aCredential.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trinsic.services.aCredential} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trinsic.services.aCredential.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    issuerid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    receipientid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    credentialtemplateid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    models_Attributes_pb.Attribute.toObject, includeInstance),
    state: jspb.Message.getFieldWithDefault(msg, 4, 0),
    issuancedate: jspb.Message.getFieldWithDefault(msg, 5, 0),
    expirationdate: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trinsic.services.aCredential}
 */
proto.trinsic.services.aCredential.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trinsic.services.aCredential;
  return proto.trinsic.services.aCredential.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trinsic.services.aCredential} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trinsic.services.aCredential}
 */
proto.trinsic.services.aCredential.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuerid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceipientid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialtemplateid(value);
      break;
    case 8:
      var value = new models_Attributes_pb.Attribute;
      reader.readMessage(value,models_Attributes_pb.Attribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    case 4:
      var value = /** @type {!proto.trinsic.services.aCredential.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIssuancedate(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpirationdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trinsic.services.aCredential.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trinsic.services.aCredential.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trinsic.services.aCredential} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trinsic.services.aCredential.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIssuerid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReceipientid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCredentialtemplateid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      models_Attributes_pb.Attribute.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getIssuancedate();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getExpirationdate();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.trinsic.services.aCredential.State = {
  CREATED: 0,
  ISSUED: 1,
  RECEIVED: 2,
  EXPIRED: 3,
  REVOKED: 4
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.trinsic.services.aCredential.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.trinsic.services.aCredential} returns this
 */
proto.trinsic.services.aCredential.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string issuerId = 2;
 * @return {string}
 */
proto.trinsic.services.aCredential.prototype.getIssuerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.trinsic.services.aCredential} returns this
 */
proto.trinsic.services.aCredential.prototype.setIssuerid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string receipientId = 7;
 * @return {string}
 */
proto.trinsic.services.aCredential.prototype.getReceipientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.trinsic.services.aCredential} returns this
 */
proto.trinsic.services.aCredential.prototype.setReceipientid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string credentialTemplateId = 3;
 * @return {string}
 */
proto.trinsic.services.aCredential.prototype.getCredentialtemplateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.trinsic.services.aCredential} returns this
 */
proto.trinsic.services.aCredential.prototype.setCredentialtemplateid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Attribute attributes = 8;
 * @return {!Array<!proto.trinsic.services.Attribute>}
 */
proto.trinsic.services.aCredential.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.trinsic.services.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, models_Attributes_pb.Attribute, 8));
};


/**
 * @param {!Array<!proto.trinsic.services.Attribute>} value
 * @return {!proto.trinsic.services.aCredential} returns this
*/
proto.trinsic.services.aCredential.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.trinsic.services.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.trinsic.services.Attribute}
 */
proto.trinsic.services.aCredential.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.trinsic.services.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.trinsic.services.aCredential} returns this
 */
proto.trinsic.services.aCredential.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};


/**
 * optional State state = 4;
 * @return {!proto.trinsic.services.aCredential.State}
 */
proto.trinsic.services.aCredential.prototype.getState = function() {
  return /** @type {!proto.trinsic.services.aCredential.State} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.trinsic.services.aCredential.State} value
 * @return {!proto.trinsic.services.aCredential} returns this
 */
proto.trinsic.services.aCredential.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional int64 issuanceDate = 5;
 * @return {number}
 */
proto.trinsic.services.aCredential.prototype.getIssuancedate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.trinsic.services.aCredential} returns this
 */
proto.trinsic.services.aCredential.prototype.setIssuancedate = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 expirationDate = 6;
 * @return {number}
 */
proto.trinsic.services.aCredential.prototype.getExpirationdate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.trinsic.services.aCredential} returns this
 */
proto.trinsic.services.aCredential.prototype.setExpirationdate = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.trinsic.services.IssueCredentialRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trinsic.services.IssueCredentialRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.trinsic.services.IssueCredentialRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trinsic.services.IssueCredentialRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trinsic.services.IssueCredentialRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    receipientid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    credentialtemplateid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    models_Attributes_pb.Attribute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trinsic.services.IssueCredentialRequest}
 */
proto.trinsic.services.IssueCredentialRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trinsic.services.IssueCredentialRequest;
  return proto.trinsic.services.IssueCredentialRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trinsic.services.IssueCredentialRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trinsic.services.IssueCredentialRequest}
 */
proto.trinsic.services.IssueCredentialRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceipientid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialtemplateid(value);
      break;
    case 4:
      var value = new models_Attributes_pb.Attribute;
      reader.readMessage(value,models_Attributes_pb.Attribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trinsic.services.IssueCredentialRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trinsic.services.IssueCredentialRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trinsic.services.IssueCredentialRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trinsic.services.IssueCredentialRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReceipientid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCredentialtemplateid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      models_Attributes_pb.Attribute.serializeBinaryToWriter
    );
  }
};


/**
 * optional string issuerId = 1;
 * @return {string}
 */
proto.trinsic.services.IssueCredentialRequest.prototype.getIssuerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.trinsic.services.IssueCredentialRequest} returns this
 */
proto.trinsic.services.IssueCredentialRequest.prototype.setIssuerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string receipientId = 2;
 * @return {string}
 */
proto.trinsic.services.IssueCredentialRequest.prototype.getReceipientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.trinsic.services.IssueCredentialRequest} returns this
 */
proto.trinsic.services.IssueCredentialRequest.prototype.setReceipientid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string credentialTemplateId = 3;
 * @return {string}
 */
proto.trinsic.services.IssueCredentialRequest.prototype.getCredentialtemplateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.trinsic.services.IssueCredentialRequest} returns this
 */
proto.trinsic.services.IssueCredentialRequest.prototype.setCredentialtemplateid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Attribute attributes = 4;
 * @return {!Array<!proto.trinsic.services.Attribute>}
 */
proto.trinsic.services.IssueCredentialRequest.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.trinsic.services.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, models_Attributes_pb.Attribute, 4));
};


/**
 * @param {!Array<!proto.trinsic.services.Attribute>} value
 * @return {!proto.trinsic.services.IssueCredentialRequest} returns this
*/
proto.trinsic.services.IssueCredentialRequest.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.trinsic.services.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.trinsic.services.Attribute}
 */
proto.trinsic.services.IssueCredentialRequest.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.trinsic.services.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.trinsic.services.IssueCredentialRequest} returns this
 */
proto.trinsic.services.IssueCredentialRequest.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trinsic.services.IssueCredentialResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.trinsic.services.IssueCredentialResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trinsic.services.IssueCredentialResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trinsic.services.IssueCredentialResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    credential: (f = msg.getCredential()) && proto.trinsic.services.aCredential.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trinsic.services.IssueCredentialResponse}
 */
proto.trinsic.services.IssueCredentialResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trinsic.services.IssueCredentialResponse;
  return proto.trinsic.services.IssueCredentialResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trinsic.services.IssueCredentialResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trinsic.services.IssueCredentialResponse}
 */
proto.trinsic.services.IssueCredentialResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.trinsic.services.aCredential;
      reader.readMessage(value,proto.trinsic.services.aCredential.deserializeBinaryFromReader);
      msg.setCredential(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trinsic.services.IssueCredentialResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trinsic.services.IssueCredentialResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trinsic.services.IssueCredentialResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trinsic.services.IssueCredentialResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredential();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.trinsic.services.aCredential.serializeBinaryToWriter
    );
  }
};


/**
 * optional aCredential credential = 1;
 * @return {?proto.trinsic.services.aCredential}
 */
proto.trinsic.services.IssueCredentialResponse.prototype.getCredential = function() {
  return /** @type{?proto.trinsic.services.aCredential} */ (
    jspb.Message.getWrapperField(this, proto.trinsic.services.aCredential, 1));
};


/**
 * @param {?proto.trinsic.services.aCredential|undefined} value
 * @return {!proto.trinsic.services.IssueCredentialResponse} returns this
*/
proto.trinsic.services.IssueCredentialResponse.prototype.setCredential = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.trinsic.services.IssueCredentialResponse} returns this
 */
proto.trinsic.services.IssueCredentialResponse.prototype.clearCredential = function() {
  return this.setCredential(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.trinsic.services.IssueCredentialResponse.prototype.hasCredential = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trinsic.services.ListCredentialRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.trinsic.services.ListCredentialRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trinsic.services.ListCredentialRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trinsic.services.ListCredentialRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trinsic.services.ListCredentialRequest}
 */
proto.trinsic.services.ListCredentialRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trinsic.services.ListCredentialRequest;
  return proto.trinsic.services.ListCredentialRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trinsic.services.ListCredentialRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trinsic.services.ListCredentialRequest}
 */
proto.trinsic.services.ListCredentialRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trinsic.services.ListCredentialRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trinsic.services.ListCredentialRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trinsic.services.ListCredentialRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trinsic.services.ListCredentialRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.trinsic.services.ListCredentialResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trinsic.services.ListCredentialResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.trinsic.services.ListCredentialResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trinsic.services.ListCredentialResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trinsic.services.ListCredentialResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialsList: jspb.Message.toObjectList(msg.getCredentialsList(),
    proto.trinsic.services.aCredential.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trinsic.services.ListCredentialResponse}
 */
proto.trinsic.services.ListCredentialResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trinsic.services.ListCredentialResponse;
  return proto.trinsic.services.ListCredentialResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trinsic.services.ListCredentialResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trinsic.services.ListCredentialResponse}
 */
proto.trinsic.services.ListCredentialResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.trinsic.services.aCredential;
      reader.readMessage(value,proto.trinsic.services.aCredential.deserializeBinaryFromReader);
      msg.addCredentials(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trinsic.services.ListCredentialResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trinsic.services.ListCredentialResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trinsic.services.ListCredentialResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trinsic.services.ListCredentialResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.trinsic.services.aCredential.serializeBinaryToWriter
    );
  }
};


/**
 * repeated aCredential credentials = 1;
 * @return {!Array<!proto.trinsic.services.aCredential>}
 */
proto.trinsic.services.ListCredentialResponse.prototype.getCredentialsList = function() {
  return /** @type{!Array<!proto.trinsic.services.aCredential>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.trinsic.services.aCredential, 1));
};


/**
 * @param {!Array<!proto.trinsic.services.aCredential>} value
 * @return {!proto.trinsic.services.ListCredentialResponse} returns this
*/
proto.trinsic.services.ListCredentialResponse.prototype.setCredentialsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.trinsic.services.aCredential=} opt_value
 * @param {number=} opt_index
 * @return {!proto.trinsic.services.aCredential}
 */
proto.trinsic.services.ListCredentialResponse.prototype.addCredentials = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.trinsic.services.aCredential, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.trinsic.services.ListCredentialResponse} returns this
 */
proto.trinsic.services.ListCredentialResponse.prototype.clearCredentialsList = function() {
  return this.setCredentialsList([]);
};


goog.object.extend(exports, proto.trinsic.services);
